The code can be run in a python terminal:

[user@somewhere]$ ipython
from example import *
ipf = run_prob2a_tree()
ipf.iterate()
#... some number of times
ipf.iterate()
ipf.ubg.summary()
ipf.log_likelihood()

ipf = run_prob2a_full()
ipf.iterate()
#... some number of times
ipf.iterate()
ipf.ubg.summary()
ipf.log_likelihood()


The results of running this code for the tree model are:

Clique: [1]
	[0]: 0.854
	[1]: 0.409
Clique: [2]
	[0]: 1.205
	[1]: 0.271
Clique: [3]
	[0]: 0.203
	[1]: 0.679
Clique: [4]
	[0]: 1.002
	[1]: 0.492
Clique: (1, 2)
	[0, 0]: 0.147
	[0, 1]: 0.200
	[1, 0]: 0.184
	[1, 1]: 0.558
Clique: (2, 3)
	[0, 0]: 0.494
	[0, 1]: 0.083
	[1, 0]: 0.369
	[1, 1]: 0.290
Clique: (3, 4)
	[0, 0]: 0.134
	[0, 1]: 0.272
	[1, 0]: 0.186
	[1, 1]: 0.379

Log-likelihood: -79.9



The results for the fully connected graph are:

Clique: [1]
	[0]: 2.307
	[1]: 0.374
Clique: [2]
	[0]: 0.659
	[1]: 0.303
Clique: [3]
	[0]: 0.305
	[1]: 0.758
Clique: [4]
	[0]: 0.478
	[1]: 0.533
Clique: (1, 2)
	[0, 0]: 0.269
	[0, 1]: 0.319
	[1, 0]: 0.151
	[1, 1]: 0.254
Clique: (1, 3)
	[0, 0]: 0.188
	[0, 1]: 0.157
	[1, 0]: 0.477
	[1, 1]: 0.208
Clique: (1, 4)
	[0, 0]: 0.133
	[0, 1]: 0.063
	[1, 0]: 0.485
	[1, 1]: 0.378
Clique: (2, 3)
	[0, 0]: 0.284
	[0, 1]: 0.363
	[1, 0]: 0.051
	[1, 1]: 0.313
Clique: (2, 4)
	[0, 0]: 0.090
	[0, 1]: 0.175
	[1, 0]: 0.421
	[1, 1]: 0.301
Clique: (3, 4)
	[0, 0]: 0.366
	[0, 1]: 0.354
	[1, 0]: 0.118
	[1, 1]: 0.172

Log-likelihood: -77.9
